<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Birthday.Telegram.Bot</name>
    </assembly>
    <members>
        <member name="T:Birthday.Telegram.Bot.Configurations.BotConfiguration">
            <summary>
            Configuration parameters for current bot
            </summary>
        </member>
        <member name="P:Birthday.Telegram.Bot.Configurations.BotConfiguration.AccessToken">
            <summary>
            Access token for connecting to a telegram bot
            </summary>
        </member>
        <member name="P:Birthday.Telegram.Bot.Configurations.BotConfiguration.Socks5Host">
            <summary>
            Socks 5 host address
            </summary>
        </member>
        <member name="P:Birthday.Telegram.Bot.Configurations.BotConfiguration.Socks5Port">
            <summary>
            Socks 5 port
            </summary>
        </member>
        <member name="T:Birthday.Telegram.Bot.Controllers.BotConfigurationController">
            <summary>
            Controller for edit bot configuration
            </summary>
        </member>
        <member name="M:Birthday.Telegram.Bot.Controllers.BotConfigurationController.#ctor(Microsoft.Extensions.Logging.ILogger{Birthday.Telegram.Bot.Controllers.BotConfigurationController},Microsoft.Extensions.Options.IOptions{Birthday.Telegram.Bot.Configurations.BotConfiguration},System.Net.Http.IHttpClientFactory)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Birthday.Telegram.Bot.Controllers.BotConfigurationController.SetWebhookUrlAsync(Birthday.Telegram.Bot.Models.InputModels.SetWebhookInputModel,System.Threading.CancellationToken)">
            <summary>
            Method for setting webhook for current telegram bot
            </summary>
            <param name="value">InputModel for set webhook</param>
            <param name="cancellationToken">Instance of cancellation token</param>
            <returns>Status end of operation</returns>
        </member>
        <member name="T:Birthday.Telegram.Bot.Controllers.BotController">
            <summary>
            Main bot controller
            </summary>
        </member>
        <member name="M:Birthday.Telegram.Bot.Controllers.BotController.#ctor(Birthday.Telegram.Bot.Services.Abstractions.IBotMessageService,Microsoft.Extensions.Logging.ILogger{Birthday.Telegram.Bot.Controllers.BotController})">
            <summary>
            Constructor
            </summary>
            <param name="botMessageService">Instance of BotMessageService</param>
            <param name="logger">ILogger instance</param>
        </member>
        <member name="M:Birthday.Telegram.Bot.Controllers.BotController.Post(Telegram.Bot.Types.Update)">
            <summary>
                Post method for receive messages from Bot (Using webhook)
            </summary>
            <param name="update">New Update from bot</param>
            <returns>Ok Action or error</returns>
        </member>
        <member name="T:Birthday.Telegram.Bot.MediatR.Handlers.StartCommandHandler">
            <summary>
            Handler for processing start command
            </summary>
        </member>
        <member name="M:Birthday.Telegram.Bot.MediatR.Handlers.StartCommandHandler.#ctor(MediatR.IMediator,Microsoft.Extensions.Logging.ILogger{Birthday.Telegram.Bot.MediatR.Handlers.StartCommandHandler})">
            <summary>
            Constructor
            </summary>
            <param name="mediator">IMediatR instance</param>
            <param name="logger">ILogger instance</param>
        </member>
        <member name="T:Birthday.Telegram.Bot.Models.Constants">
            <summary>
            Class with constants values
            </summary>
        </member>
        <member name="T:Birthday.Telegram.Bot.Models.Constants.BotCommands">
            <summary>
            Bot message commands constants
            </summary>
        </member>
        <member name="F:Birthday.Telegram.Bot.Models.Constants.BotCommands.Start">
            <summary>
            Start command
            </summary>
        </member>
        <member name="T:Birthday.Telegram.Bot.Models.Constants.DotNetConstants">
            <summary>
            Constants for .Net Platform
            </summary>
        </member>
        <member name="T:Birthday.Telegram.Bot.Models.Constants.DotNetConstants.WellKnownEnvironments">
            <summary>
            Well known environment variables
            </summary>
        </member>
        <member name="F:Birthday.Telegram.Bot.Models.Constants.DotNetConstants.WellKnownEnvironments.AspNetCoreEnvironment">
            <summary>
            Asp net core environment variable
            </summary>
        </member>
        <member name="T:Birthday.Telegram.Bot.Models.Constants.TypedHttpClients">
            <summary>
            Names of typed https clients
            </summary>
        </member>
        <member name="F:Birthday.Telegram.Bot.Models.Constants.TypedHttpClients.TelegramApi">
            <summary>
            Telegram api http client name
            </summary>
        </member>
        <member name="T:Birthday.Telegram.Bot.Models.InputModels.SetWebhookInputModel">
            <summary>
            Input model for SetWebhook method
            </summary>
        </member>
        <member name="P:Birthday.Telegram.Bot.Models.InputModels.SetWebhookInputModel.WebhookUrl">
            <summary>
            Webhook Url
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Birthday.Telegram.Bot.Models.TypedHttpClientInformation" -->
        <!-- Badly formed XML comment ignored for member "M:Birthday.Telegram.Bot.Models.TypedHttpClientInformation.#ctor(System.String,System.String)" -->
        <member name="M:Birthday.Telegram.Bot.Models.TypedHttpClientInformation.ToString">
            <summary>
                Get string from client
            </summary>
            <returns>Http client name</returns>
        </member>
        <member name="T:Birthday.Telegram.Bot.Program">
            <summary>
            Entrypoint for current project service
            </summary>
        </member>
        <member name="M:Birthday.Telegram.Bot.Program.Main(System.String[])">
            <summary>
            Method main
            </summary>
            <param name="args">Additional arguments for project</param>
        </member>
        <member name="M:Birthday.Telegram.Bot.Program.CreateHostBuilder(System.String[])">
            <summary>
            Method for cheare Hot for project
            </summary>
            <param name="args">Additional arguments for project</param>
            <returns>Instance of hots builder</returns>
        </member>
        <member name="T:Birthday.Telegram.Bot.Services.Abstractions.IBotMessageService">
            <summary>
            Service for processing messages coming from the bot
            </summary>
        </member>
        <member name="M:Birthday.Telegram.Bot.Services.Abstractions.IBotMessageService.ProcessUpdateAsync(Telegram.Bot.Types.Update)">
            <summary>
            Method for processing message from bot
            </summary>
            <param name="update">Message update</param>
            <returns>Completed task</returns>
        </member>
        <member name="T:Birthday.Telegram.Bot.Services.BotMessageService">
            <inheritdoc cref="T:Birthday.Telegram.Bot.Services.Abstractions.IBotMessageService" />
        </member>
        <member name="M:Birthday.Telegram.Bot.Services.BotMessageService.#ctor(MediatR.IMediator,Microsoft.Extensions.Logging.ILogger{Birthday.Telegram.Bot.Services.BotMessageService})">
            <summary>
                Constructor
            </summary>
            <param name="mediator"> Mediator</param>
            <param name="logger"> Logge r</param>
        </member>
        <member name="M:Birthday.Telegram.Bot.Services.BotMessageService.ProcessUpdateAsync(Telegram.Bot.Types.Update)">
            <inheritdoc cref="M:Birthday.Telegram.Bot.Services.BotMessageService.ProcessUpdateAsync(Telegram.Bot.Types.Update)" />
        </member>
        <member name="T:Birthday.Telegram.Bot.Startup">
            <summary>
            Startup class with configurations for current project
            </summary>
        </member>
        <member name="P:Birthday.Telegram.Bot.Startup.Configuration">
            <summary>
            IConfiguration property
            </summary>
        </member>
        <member name="P:Birthday.Telegram.Bot.Startup.WebHostEnvironment">
            <summary>
            IWebHostEnvironment property
            </summary>
        </member>
        <member name="M:Birthday.Telegram.Bot.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Constructor
            </summary>
            <param name="configuration">IConfiguration instance</param>
            <param name="webHostEnvironment">IWebHostEnvironment instance</param>
        </member>
        <member name="M:Birthday.Telegram.Bot.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Method for configuration DI services for current project
            </summary>
            <param name="services">Instance of IServiceCollection</param>
        </member>
        <member name="M:Birthday.Telegram.Bot.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
             This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
             <param name="app">Instance of IApplicationBuilder</param>
             <param name="env">Instance of IWebHostEnvironment</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions">
            <summary>
            Class with extensions for IAppicationBuilder instance
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.UserCustomSwagger(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Extemsion for put swagger in asp new middleware
            </summary>
            <param name="builder">Instance of IApplicationBuilder</param>
            <returns>Instance of IApplicationBuilder</returns>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.ServiceCollectionsExtensions">
            <summary>
            Class with extensions for IServiceCollection
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionsExtensions.AddCustomOptions(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Configure additional IOptions params
            </summary>
            <param name="services">Instance of IServiceCollection</param>
            <param name="configuration">Instance of IConfiguration</param>
            <returns>IServiceCollection instance</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionsExtensions.AddCustomSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Register services for create connection to Swagger
            </summary>
            <param name="services">Instance of IServiceCollection</param>
            <returns>IServiceCollection instance</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionsExtensions.AddCustomHeepClients(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Add custom HttpClients for current service
            </summary>
            <param name="services">Instance of IServiceCollection</param>
            <returns>IServiceCollection instance</returns>
        </member>
        <member name="T:DevQuiz.TelegramBot.Models.ApiResults.SetWebHookApiResult">
            <summary>
                Set web hook api result model
            </summary>
        </member>
        <member name="P:DevQuiz.TelegramBot.Models.ApiResults.SetWebHookApiResult.Ok">
            <summary>
                Set web hook status
            </summary>
        </member>
        <member name="P:DevQuiz.TelegramBot.Models.ApiResults.SetWebHookApiResult.Error_code">
            <summary>
                Error code
            </summary>
        </member>
        <member name="P:DevQuiz.TelegramBot.Models.ApiResults.SetWebHookApiResult.Description">
            <summary>
                Description message
            </summary>
        </member>
    </members>
</doc>
